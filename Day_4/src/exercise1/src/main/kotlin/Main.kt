package org.example

fun main() {
    val revolver = RevolverDrum<Int>()
    println("1. Adding elements")
    revolver.addBullet(54)
    revolver.addBullet(7)
    revolver.addBullet(2)
    revolver.addBullet(56)
    revolver.addBullet(4)
    revolver.addBullet(3)
    println(revolver)
    println()
    println("2. Scroll")
    revolver.scrollDrum()
    println(revolver)
    println()
    println("3. Deletion")
    revolver.shootBullet()
    revolver.shootBullet()
    revolver.shootBullet()
    revolver.shootBullet()
    println(revolver)
    println()
    println("4. Supply collection")
    val supply = mutableListOf(4, 6, 3, 22, 77, 43, 76, 5)
    println("Before")
    println("Supply collection: $supply")
    println()
    println(revolver)
    println()
    println("After add operation performed:")
    revolver.supplyBullets(supply)
    println("Supply collection: $supply")
    println()
    println(revolver)
    println()
    println("5. Extraction")
    val extrList = revolver.unloadAllBullets()
    println("The extracted list: $extrList")
    println("size: ${extrList.size}")
    println()
    println(revolver)
    println("size: ${revolver.bulletsCount()}")
    println()
    println("6. Supply collection 2")
    println("Before:")
    println("Supply collection: $supply")
    println()
    println(revolver)
    println()
    println("After add operation performed:")
    revolver.supplyBullets(supply)
    println("Supply collection: $supply")
    println()
    println(revolver)
    println()
    println("7. Equals")
    val eqTest = RevolverDrum<Int>()
    eqTest.addBullet(5)
    eqTest.addBullet(76)
    eqTest.addBullet(43)
    eqTest.addBullet(77)
    println(revolver)
    println()
    println(eqTest)
    println()
    if (revolver == eqTest) {
        println("Result: equals")
    } else {
        println("Result: not equals")
    }
}